!-----------------------------------------------------------------------
!     SUBROUTINE ZUR BERECHNUNG DER WERKSTOFFMATRIX F�R
!     STAHLBETONELEMENTE
!
!     PROGRAMMIERUNG:     DR. KAREL THOMA, HOCHSCHULE LUZERN
!                         PATRICK ROOS, HOCHSCHULE LUZERN
!     DATUM:              02.06.2014
!-----------------------------------------------------------------------
      SUBROUTINE SUB_MECH_MODELL(SPANNUNGEN_0,DEHNUNGEN_0,DEPS,MATERIAL,
     &                           SCHICHTINFO,E_MAT,SPANNUNGEN,HAUPT,
     &                           DRUCK,DRUCKFELD,DRUCKZUG,ZUG,STATE)

      IMPLICIT NONE

      ! VARIABLENDEKLARATION:
      DOUBLE PRECISION, DIMENSION(3), INTENT(IN) :: SPANNUNGEN_0
      DOUBLE PRECISION, DIMENSION(3), INTENT(IN) ::DEHNUNGEN_0, DEPS
      DOUBLE PRECISION, DIMENSION(60), INTENT(IN):: MATERIAL
      INTEGER, INTENT(IN) :: SCHICHTINFO
      DOUBLE PRECISION, DIMENSION(3,3), INTENT(OUT):: E_MAT
      DOUBLE PRECISION, DIMENSION(3), INTENT(OUT):: SPANNUNGEN
      DOUBLE PRECISION, DIMENSION(3), INTENT(OUT):: HAUPT
      DOUBLE PRECISION, DIMENSION(11), INTENT(OUT):: DRUCK, DRUCKZUG,
     &                                               ZUG
      DOUBLE PRECISION, DIMENSION(12), INTENT(OUT):: DRUCKFELD
      INTEGER, DIMENSION(4), INTENT(OUT)         ::  STATE

      DOUBLE COMPLEX  , DIMENSION(3) :: S_HX_I_1,S_HY_I_1,S_HXY_I_1
      DOUBLE COMPLEX  , DIMENSION(3) :: SPANNUNG_C
      DOUBLE COMPLEX  , DIMENSION(3) :: S_HX_I_2,S_HY_I_2,S_HXY_I_2
      DOUBLE COMPLEX  , DIMENSION(3) :: S_HX_I_3,S_HY_I_3,S_HXY_I_3
      DOUBLE COMPLEX  , DIMENSION(3) :: S_HX_I_4,S_HY_I_4,S_HXY_I_4
      DOUBLE PRECISION, DIMENSION(3) :: S_HX,S_HY,S_HXY

      DOUBLE PRECISION :: STEP,EX,EY,GAMMA_XY, E1, E3, THETA
      DOUBLE COMPLEX :: FCC, VC, K_E, EC, FCT, AUX, K_RISS, ECU

      DOUBLE COMPLEX   :: K,THETA_C,E1_C,E3_C
      DOUBLE COMPLEX   :: EX_I_1, EY_I_1, GAMMA_XY_I_1
      DOUBLE COMPLEX   :: EX_I_2, EY_I_2, GAMMA_XY_I_2
      DOUBLE COMPLEX   :: EX_I_3, EY_I_3, GAMMA_XY_I_3
      DOUBLE COMPLEX   :: EX_I_4, EY_I_4, GAMMA_XY_I_4
      DOUBLE COMPLEX   :: EX_COM, EY_COM, GAMMA_XY_COM

      DOUBLE COMPLEX   :: PSIX, PSIY

      INTEGER :: STATE_CAL

      DOUBLE PRECISION, DIMENSION(3) :: EPS

      INTEGER, DIMENSION(2) :: STATE_DF,STATE_ZUG

      ! INTERFACES ZU EXTERNEN SUBROUTINEN
      INTERFACE

      SUBROUTINE SUB_S_E_DRUCKFELD(EX,EY,GAMMA_XY,DEPS,MATERIAL,
     &                             SCHICHTINFO,SPANNUNGEN,DRUCKFELD,
     &                             STATE_DF)
        DOUBLE COMPLEX, INTENT(IN) :: EX, EY, GAMMA_XY
        DOUBLE PRECISION, DIMENSION(60), INTENT(IN) :: MATERIAL
        DOUBLE PRECISION, DIMENSION(3), INTENT(IN) :: DEPS
        INTEGER, INTENT(IN) :: SCHICHTINFO
        DOUBLE COMPLEX, DIMENSION(3), INTENT(OUT):: SPANNUNGEN
        DOUBLE PRECISION, DIMENSION(12), INTENT(OUT) :: DRUCKFELD
        INTEGER, DIMENSION(2), INTENT(OUT) :: STATE_DF
      END SUBROUTINE SUB_S_E_DRUCKFELD

      SUBROUTINE SUB_S_E_ZUG(EX,EY,GAMMA_XY,DEPS,MATERIAL,SCHICHTINFO,
     &                       SPANNUNGEN,ZUG,STATE_ZUG)
        DOUBLE COMPLEX, INTENT(IN) :: EX, EY, GAMMA_XY
        DOUBLE PRECISION, DIMENSION(60), INTENT(IN) :: MATERIAL
        DOUBLE PRECISION, DIMENSION(3), INTENT(IN) :: DEPS
        INTEGER, INTENT(IN) :: SCHICHTINFO
        DOUBLE COMPLEX, DIMENSION(3), INTENT(OUT):: SPANNUNGEN
        DOUBLE PRECISION, DIMENSION(11), INTENT(OUT) :: ZUG
        INTEGER, DIMENSION(2), INTENT(OUT) :: STATE_ZUG
      END SUBROUTINE SUB_S_E_ZUG

      SUBROUTINE SUB_S_E_DRUCK_ZUG(EX,EY,GAMMA_XY,DEPS,MATERIAL,
     &                             SCHICHTINFO,SPANNUNGEN,DRUCKZUG)
        DOUBLE COMPLEX, INTENT(IN) :: EX, EY, GAMMA_XY
        DOUBLE PRECISION, DIMENSION(60), INTENT(IN) :: MATERIAL
        DOUBLE PRECISION, DIMENSION(3), INTENT(IN) :: DEPS
        INTEGER, INTENT(IN) :: SCHICHTINFO
        DOUBLE COMPLEX, DIMENSION(3), INTENT(OUT):: SPANNUNGEN
        DOUBLE PRECISION, DIMENSION(11), INTENT(OUT) :: DRUCKZUG
      END SUBROUTINE SUB_S_E_DRUCK_ZUG

      SUBROUTINE SUB_S_E_DRUCK(EX,EY,GAMMA_XY,DEPS,MATERIAL,SCHICHTINFO,
     &                         SPANNUNGEN,DRUCK)
        DOUBLE COMPLEX, INTENT(IN) :: EX, EY, GAMMA_XY
        DOUBLE PRECISION, DIMENSION(60), INTENT(IN) :: MATERIAL
        DOUBLE PRECISION, DIMENSION(3), INTENT(IN) :: DEPS
        INTEGER, INTENT(IN) :: SCHICHTINFO
        DOUBLE COMPLEX, DIMENSION(3), INTENT(OUT):: SPANNUNGEN
        DOUBLE PRECISION, DIMENSION(11), INTENT(OUT) :: DRUCK
      END SUBROUTINE SUB_S_E_DRUCK

      SUBROUTINE SUB_E1_E3(EX,EY,GAMMA_XY,E1,E3)
        DOUBLE COMPLEX,  INTENT(IN) :: EX, EY, GAMMA_XY
        DOUBLE COMPLEX, INTENT(OUT) :: E1, E3
      END SUBROUTINE SUB_E1_E3

      END INTERFACE

      ! VORGABEN:
      HAUPT = 0D0
      DRUCK = 0D0
      DRUCKFELD = 0D0
      DRUCKZUG = 0D0
      ZUG   = 0D0
      STATE = 0
      STATE_ZUG = 0
      STATE_DF = 0
      E_MAT = 0D0
      STATE_CAL = 1

      EX = DEHNUNGEN_0(1)+DEPS(1)
      EY = DEHNUNGEN_0(2)+DEPS(2)
      GAMMA_XY = DEHNUNGEN_0(3)+DEPS(3)

      STEP  = EPSILON(1D0)     ! SCHRITTWEITE F�R NUMERISCHE ABLEITUNG

      ! BEWEHRUNGSRICHTUNGEN:
      PSIX = CMPLX(MATERIAL(11),0D0,KIND=8)
      PSIY = CMPLX(MATERIAL(24),0D0,KIND=8)

      ! BETON
      FCC  = CMPLX(MATERIAL(34),0D0,KIND=8)
      VC   = CMPLX(MATERIAL(35),0D0,KIND=8)

      IF (MATERIAL(36).GE.0D0) THEN
      ! DISS SEELHOFER FORMEL (3.4) S. 56
         ECU = CMPLX(-0.6D0,0D0,KIND=8)*(FCC**CMPLX(1D0/3D0,0D0,KIND=8))
      ELSE
         ECU  = CMPLX(MATERIAL(36),0D0,KIND=8)
      END IF

      K_E = CMPLX(MATERIAL(37),0D0,KIND=8)

      EC  = K_E*(FCC)**CMPLX(1D0/3D0,0D0,KIND=8)
      FCT = CMPLX(0.3D0,0D0,KIND=8)*(FCC*FCC)**CMPLX(1D0/3D0,0D0,KIND=8)

      K_RISS = CMPLX(MATERIAL(40),0D0,KIND=8)

      EX_COM = CMPLX(EX,0D0,KIND=8)
      EY_COM = CMPLX(EY,0D0,KIND=8)
      GAMMA_XY_COM = CMPLX(GAMMA_XY,0D0,KIND=8)

      ! BERECHNUNG DER HAUPTDEHNUNGEN:

      CALL SUB_E1_E3(EX_COM,EY_COM,GAMMA_XY_COM,E1_C,E3_C)

      E1 = REAL(E1_C)
      E3 = REAL(E3_C)

      CALL SUB_THETA_ALLGEMEIN(EX_COM,EY_COM,GAMMA_XY_COM,THETA_C)

      THETA = REAL(THETA_C)

      HAUPT(1) = E1
      HAUPT(2) = E3
      HAUPT(3) = THETA

      ! ABBRUCHKRITERIUM F�R BETONBRUCH:
      IF (REAL(E3) .LT. REAL(ECU)) THEN
        !PRINT *, 'BETONBRUCH!'
        STATE(2) = 1
      ELSE
        STATE(2) = 0
      END IF

      ! VORBEREITUNG DER KOMPLEXEN ABLEITUNG (SCHRITTWEITEN)

      K = CMPLX(-0.5D0,0.5D0*(SQRT(3D0)),KIND=8)

      EX_I_1 = CMPLX(EX,0D0,KIND=8)+K*STEP/CMPLX(2D0,0D0,KIND=8)
      EX_I_2 = CMPLX(EX,0D0,KIND=8)-K*STEP/CMPLX(2D0,0D0,KIND=8)
      EX_I_3 = CMPLX(EX,0D0,KIND=8)+K*STEP
      EX_I_4 = CMPLX(EX,0D0,KIND=8)-K*STEP

      EY_I_1 = CMPLX(EY,0D0,KIND=8)+K*STEP/CMPLX(2D0,0D0,KIND=8)
      EY_I_2 = CMPLX(EY,0D0,KIND=8)-K*STEP/CMPLX(2D0,0D0,KIND=8)
      EY_I_3 = CMPLX(EY,0D0,KIND=8)+K*STEP
      EY_I_4 = CMPLX(EY,0D0,KIND=8)-K*STEP

      GAMMA_XY_I_1 = CMPLX(GAMMA_XY,0D0,KIND=8)+K*STEP/
     &               CMPLX(2D0,0D0,KIND=8)
      GAMMA_XY_I_2 = CMPLX(GAMMA_XY,0D0,KIND=8)-K*STEP/
     &               CMPLX(2D0,0D0,KIND=8)
      GAMMA_XY_I_3 = CMPLX(GAMMA_XY,0D0,KIND=8)+K*STEP
      GAMMA_XY_I_4 = CMPLX(GAMMA_XY,0D0,KIND=8)-K*STEP

      ! BERECHNUNG DER WERKSTOFFMATRIX:
      IF (E3 .LT. 0D0 .AND. E1 .LT. 0D0) THEN
      ! A) MODELL F�R ZWEIACHSIGE DRUCKBEANSPRUCHUNGEN

      ! => TANGENTENSTEIFIGKEITSMATRIX (MIT KOMPLEXER NUM. ABLEITUNG)

      CALL SUB_S_E_DRUCK(EX_I_1,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                   SCHICHTINFO,S_HX_I_1,DRUCK)

      CALL SUB_S_E_DRUCK(EX_I_2,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                   SCHICHTINFO,S_HX_I_2,DRUCK)

      CALL SUB_S_E_DRUCK(EX_I_3,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                   SCHICHTINFO,S_HX_I_3,DRUCK)

      CALL SUB_S_E_DRUCK(EX_I_4,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                   SCHICHTINFO,S_HX_I_4,DRUCK)

      CALL SUB_S_E_DRUCK(EX_COM,EY_I_1,GAMMA_XY_COM,DEPS,MATERIAL,
     &                   SCHICHTINFO,S_HY_I_1,DRUCK)

      CALL SUB_S_E_DRUCK(EX_COM,EY_I_2,GAMMA_XY_COM,DEPS,MATERIAL,
     &                   SCHICHTINFO,S_HY_I_2,DRUCK)

      CALL SUB_S_E_DRUCK(EX_COM,EY_I_3,GAMMA_XY_COM,DEPS,MATERIAL,
     &                   SCHICHTINFO,S_HY_I_3,DRUCK)

      CALL SUB_S_E_DRUCK(EX_COM,EY_I_4,GAMMA_XY_COM,DEPS,MATERIAL,
     &                   SCHICHTINFO,S_HY_I_4,DRUCK)

      CALL SUB_S_E_DRUCK(EX_COM,EY_COM,GAMMA_XY_I_1,DEPS,MATERIAL,
     &                   SCHICHTINFO,S_HXY_I_1,DRUCK)

      CALL SUB_S_E_DRUCK(EX_COM,EY_COM,GAMMA_XY_I_2,DEPS,MATERIAL,
     &                   SCHICHTINFO,S_HXY_I_2,DRUCK)

      CALL SUB_S_E_DRUCK(EX_COM,EY_COM,GAMMA_XY_I_3,DEPS,MATERIAL,
     &                   SCHICHTINFO,S_HXY_I_3,DRUCK)

      CALL SUB_S_E_DRUCK(EX_COM,EY_COM,GAMMA_XY_I_4,DEPS,MATERIAL,
     &                   SCHICHTINFO,S_HXY_I_4,DRUCK)

      ! BERECHNUNG DER SPANNUNGEN:

      CALL SUB_S_E_DRUCK(EX_COM,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                   SCHICHTINFO,SPANNUNG_C,DRUCK)

      SPANNUNGEN = REAL(SPANNUNG_C)

      STATE(1) = 1
      STATE_CAL = 1

      ELSE IF (E3 .LT. 0D0 .AND. 0D0 <= E1 .AND.
     &         E1 <= REAL((K_RISS*FCT)/EC)) THEN
    ! B) MODELL F�R ZUG- UND DRUCKBEANSPRUCHUGNEN

      CALL SUB_S_E_DRUCK_ZUG(EX_I_1,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HX_I_1,DRUCKZUG)

      CALL SUB_S_E_DRUCK_ZUG(EX_I_2,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HX_I_2,DRUCKZUG)

      CALL SUB_S_E_DRUCK_ZUG(EX_I_3,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HX_I_3,DRUCKZUG)

      CALL SUB_S_E_DRUCK_ZUG(EX_I_4,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HX_I_4,DRUCKZUG)

      CALL SUB_S_E_DRUCK_ZUG(EX_COM,EY_I_1,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HY_I_1,DRUCKZUG)

      CALL SUB_S_E_DRUCK_ZUG(EX_COM,EY_I_2,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HY_I_2,DRUCKZUG)

      CALL SUB_S_E_DRUCK_ZUG(EX_COM,EY_I_3,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HY_I_3,DRUCKZUG)

      CALL SUB_S_E_DRUCK_ZUG(EX_COM,EY_I_4,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HY_I_4,DRUCKZUG)

      CALL SUB_S_E_DRUCK_ZUG(EX_COM,EY_COM,GAMMA_XY_I_1,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HXY_I_1,DRUCKZUG)

      CALL SUB_S_E_DRUCK_ZUG(EX_COM,EY_COM,GAMMA_XY_I_2,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HXY_I_2,DRUCKZUG)

      CALL SUB_S_E_DRUCK_ZUG(EX_COM,EY_COM,GAMMA_XY_I_3,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HXY_I_3,DRUCKZUG)

      CALL SUB_S_E_DRUCK_ZUG(EX_COM,EY_COM,GAMMA_XY_I_4,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HXY_I_4,DRUCKZUG)

      ! BERECHNUNG DER SPANNUNGEN:

      CALL SUB_S_E_DRUCK_ZUG(EX_COM,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,SPANNUNG_C,DRUCKZUG)

      SPANNUNGEN = REAL(SPANNUNG_C)

      STATE(1) = 2
      STATE_CAL = 1


      ELSE IF (0D0 <= E3 .AND. E3 <= REAL((K_RISS*FCT)/EC) .AND.
     &         0D0 <= E1 .AND. E1 <= REAL((K_RISS*FCT)/EC)) THEN

      ! C) LINEAR ELASTISCHES MATERIALVERHALTEN

      ! => ELASTIZIT�TSMATRIX

      STATE(1) = 3
      STATE_CAL = 2

      AUX = REAL(EC)/(1D0-(REAL(VC)*REAL(VC)))
      E_MAT(1,1) = REAL(AUX)
      E_MAT(1,2) = REAL(AUX)*REAL(VC)
      E_MAT(2,1) = REAL(AUX)*REAL(VC)
      E_MAT(2,2) = REAL(AUX)
      E_MAT(3,3) = REAL(AUX)*((1D0-REAL(VC))/2D0)

      EPS(1)=EX
      EPS(2)=EY
      EPS(3)=GAMMA_XY

      SPANNUNGEN = MATMUL(E_MAT,EPS)


      ELSE IF (E3 .LT. 0D0 .AND. E1 .GT. REAL((K_RISS*FCT)/EC)) THEN

      ! D) GERISSENES SCHEIBENMODELL F�R FE-ANALYSEN

      ! => TANGENTENSTEIFIGKEITSMATRIX (MIT KOMPLEXER NUM. ABLEITUNG)

      CALL SUB_S_E_DRUCKFELD(EX_I_1,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HX_I_1,DRUCKFELD,STATE_DF)

      CALL SUB_S_E_DRUCKFELD(EX_I_2,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HX_I_2,DRUCKFELD,STATE_DF)

      CALL SUB_S_E_DRUCKFELD(EX_I_3,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HX_I_3,DRUCKFELD,STATE_DF)

      CALL SUB_S_E_DRUCKFELD(EX_I_4,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HX_I_4,DRUCKFELD,STATE_DF)

      CALL SUB_S_E_DRUCKFELD(EX_COM,EY_I_1,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HY_I_1,DRUCKFELD,STATE_DF)

      CALL SUB_S_E_DRUCKFELD(EX_COM,EY_I_2,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HY_I_2,DRUCKFELD,STATE_DF)

      CALL SUB_S_E_DRUCKFELD(EX_COM,EY_I_3,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HY_I_3,DRUCKFELD,STATE_DF)

      CALL SUB_S_E_DRUCKFELD(EX_COM,EY_I_4,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HY_I_4,DRUCKFELD,STATE_DF)

      CALL SUB_S_E_DRUCKFELD(EX_COM,EY_COM,GAMMA_XY_I_1,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HXY_I_1,DRUCKFELD,STATE_DF)

      CALL SUB_S_E_DRUCKFELD(EX_COM,EY_COM,GAMMA_XY_I_2,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HXY_I_2,DRUCKFELD,STATE_DF)

      CALL SUB_S_E_DRUCKFELD(EX_COM,EY_COM,GAMMA_XY_I_3,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HXY_I_3,DRUCKFELD,STATE_DF)

      CALL SUB_S_E_DRUCKFELD(EX_COM,EY_COM,GAMMA_XY_I_4,DEPS,MATERIAL,
     &                       SCHICHTINFO,S_HXY_I_4,DRUCKFELD,STATE_DF)


      ! BERECHNUNG DER SPANNUNGEN:

      CALL SUB_S_E_DRUCKFELD(EX_COM,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                       SCHICHTINFO,SPANNUNG_C,DRUCKFELD,STATE_DF)

      SPANNUNGEN = REAL(SPANNUNG_C)

      STATE(3) = STATE_DF(1)
      STATE(4) = STATE_DF(2)

      STATE(1) = 4
      STATE_CAL = 1

      ELSE IF (E3 >= 0D0 .AND. E1 .GT. REAL((K_RISS*FCT)/EC)) THEN

      ! E) MODELL F�R ZWEIACHSIGE ZUGBEANSPRUCHUNG

      ! => TANGENTENSTEIFIGKEITSMATRIX (MIT KOMPLEXER NUM. ABLEITUNG)

      CALL SUB_S_E_ZUG(EX_I_1,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                 SCHICHTINFO,S_HX_I_1,ZUG,STATE_ZUG)

      CALL SUB_S_E_ZUG(EX_I_2,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                 SCHICHTINFO,S_HX_I_2,ZUG,STATE_ZUG)

      CALL SUB_S_E_ZUG(EX_I_3,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                 SCHICHTINFO,S_HX_I_3,ZUG,STATE_ZUG)

      CALL SUB_S_E_ZUG(EX_I_4,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                 SCHICHTINFO,S_HX_I_4,ZUG,STATE_ZUG)

      CALL SUB_S_E_ZUG(EX_COM,EY_I_1,GAMMA_XY_COM,DEPS,MATERIAL,
     &                 SCHICHTINFO,S_HY_I_1,ZUG,STATE_ZUG)

      CALL SUB_S_E_ZUG(EX_COM,EY_I_2,GAMMA_XY_COM,DEPS,MATERIAL,
     &                 SCHICHTINFO,S_HY_I_2,ZUG,STATE_ZUG)

      CALL SUB_S_E_ZUG(EX_COM,EY_I_3,GAMMA_XY_COM,DEPS,MATERIAL,
     &                 SCHICHTINFO,S_HY_I_3,ZUG,STATE_ZUG)

      CALL SUB_S_E_ZUG(EX_COM,EY_I_4,GAMMA_XY_COM,DEPS,MATERIAL,
     &                 SCHICHTINFO,S_HY_I_4,ZUG,STATE_ZUG)

      CALL SUB_S_E_ZUG(EX_COM,EY_COM,GAMMA_XY_I_1,DEPS,MATERIAL,
     &                 SCHICHTINFO,S_HXY_I_1,ZUG,STATE_ZUG)

      CALL SUB_S_E_ZUG(EX_COM,EY_COM,GAMMA_XY_I_2,DEPS,MATERIAL,
     &                 SCHICHTINFO,S_HXY_I_2,ZUG,STATE_ZUG)

      CALL SUB_S_E_ZUG(EX_COM,EY_COM,GAMMA_XY_I_3,DEPS,MATERIAL,
     &                 SCHICHTINFO,S_HXY_I_3,ZUG,STATE_ZUG)

      CALL SUB_S_E_ZUG(EX_COM,EY_COM,GAMMA_XY_I_4,DEPS,MATERIAL,
     &                 SCHICHTINFO,S_HXY_I_4,ZUG,STATE_ZUG)

      ! BERECHNUNG DER SPANNUNG

      CALL SUB_S_E_ZUG(EX_COM,EY_COM,GAMMA_XY_COM,DEPS,MATERIAL,
     &                 SCHICHTINFO,SPANNUNG_C,ZUG,STATE_ZUG)

      SPANNUNGEN = REAL(SPANNUNG_C)
      STATE(1) = 5
      STATE(3) = STATE_ZUG(1)
      STATE(4) = STATE_ZUG(2)
      STATE_CAL = 1

      END IF


      IF (STATE_CAL .EQ. 1) THEN

        S_HX  = AIMAG(32D0*(S_HX_I_1-S_HX_I_2)-(S_HX_I_3-S_HX_I_4))/
     &          (15D0*SQRT(3D0)*STEP)

        S_HY  = AIMAG(32D0*(S_HY_I_1-S_HY_I_2)-(S_HY_I_3-S_HY_I_4))/
     &          (15D0*SQRT(3D0)*STEP)

        S_HXY =AIMAG(32D0*(S_HXY_I_1-S_HXY_I_2)-(S_HXY_I_3-S_HXY_I_4))/
     &          (15D0*SQRT(3D0)*STEP)

        ! ENTSPRECHEND ANSYS UMSORTIERTE MATRIX!!
        E_MAT(1,1) = S_HX(1)
        E_MAT(1,2) = S_HY(1)
        E_MAT(1,3) = S_HXY(1)

        E_MAT(2,1) = S_HX(2)
        E_MAT(2,2) = S_HY(2)
        E_MAT(2,3) = S_HXY(2)

        E_MAT(3,1) = S_HX(3)
        E_MAT(3,2) = S_HY(3)
        E_MAT(3,3) = S_HXY(3)

      END IF

      END SUBROUTINE SUB_MECH_MODELL