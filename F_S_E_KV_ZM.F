!-----------------------------------------------------------------------
!     HILFSFUNKTION F�R ZUGGURTMODELL F�R KALTVERFORMTE ST�HLE
!
!     PROGRAMMIERUNG:     DR. KAREL THOMA, HOCHSCHULE LUZERN
!                         PATRICK ROOS, HOCHSCHULE LUZERN
!     DATUM:              22.04.2014
!-----------------------------------------------------------------------
      FUNCTION F_S_E_KV_ZM(SIGMA_SR,SRM,DM,FSY,FSU,ESU,ES,TAU_B0,
     &                     TAU_B1,EC,RHO,KC,ALPHA)

      IMPLICIT NONE

      ! VARIABLENDEKLARATION
      DOUBLE COMPLEX             :: F_S_E_KV_ZM
      DOUBLE COMPLEX, INTENT(IN) :: SIGMA_SR,SRM,DM,FSY,FSU,ESU,ES,
     &                              TAU_B0,TAU_B1,EC,RHO,KC,ALPHA

      DOUBLE COMPLEX             :: SIG_ID, EPS_M,N, X1, X2, X3

      N=ES/EC
      SIG_ID =N*SIGMA_SR*RHO/(CMPLX(1D0,0D0,KIND=8)+RHO*
     &       (N-CMPLX(1D0,0D0,KIND=8)))

      X1 = DM/(CMPLX(4D0,0D0,KIND=8)*TAU_B0)*(SIGMA_SR-SIG_ID)
      X2=  DM/(CMPLX(4D0,0D0,KIND=8)*TAU_B0)*(FSY-SIG_ID)
      X3=  DM/(CMPLX(4D0,0D0,KIND=8)*TAU_B1)*(SIGMA_SR-FSY)


      IF ((REAL(SIGMA_SR-CMPLX(2D0,0D0,KIND=8)*TAU_B0*SRM/DM) .LE.
     &REAL(SIG_ID)) .AND. (REAL(SIGMA_SR) .LE. REAL(FSY))) THEN

      EPS_M = CMPLX(2D0,0D0,KIND=8)/SRM*(X1*(SIGMA_SR/ES-
     &        CMPLX(2D0,0D0,KIND=8)*TAU_B0*X1/(ES*DM)+DM/
     &        (CMPLX(4D0,0D0,KIND=8)*TAU_B0*X1*(CMPLX(1D0,0D0,KIND=8)+
     &        ALPHA)*KC**ALPHA)*(SIGMA_SR**(ALPHA+
     &        CMPLX(1D0,0D0,KIND=8))-(SIGMA_SR-CMPLX(4D0,0D0,KIND=8)*
     &        TAU_B0*X1/DM)**(CMPLX(1D0,0D0,KIND=8)+ALPHA)))+(SIGMA_SR/
     &        ES*N*RHO/(CMPLX(1D0,0D0,KIND=8)+N*RHO)*(SRM/
     &        CMPLX(2D0,0D0,KIND=8)-X1)))

      ELSEIF ((REAL(FSY-CMPLX(4D0,0D0,KIND=8)*TAU_B0*(SRM/
     &CMPLX(2D0,0D0,KIND=8)-X3)/DM).LT.REAL(SIG_ID)) .AND.
     &(REAL(X3) .GE. 0D0)) THEN

      EPS_M = (X2*(FSY/ES-CMPLX(2D0,0D0,KIND=8)*TAU_B0*X2/(ES*DM)+DM/
     &        (CMPLX(4D0,0D0,KIND=8)*TAU_B0*X2*(CMPLX(1D0,0D0,KIND=8)+
     &        ALPHA)*KC**ALPHA)*(FSY**(ALPHA+CMPLX(1D0,0D0,KIND=8))-
     &        (FSY-CMPLX(4D0,0D0,KIND=8)*TAU_B0*X2/DM)**
     &        (CMPLX(1D0,0D0,KIND=8)+ALPHA)))+(SIGMA_SR/ES*N*RHO/
     &        (CMPLX(1D0,0D0,KIND=8)+N*RHO)*(SRM/CMPLX(2D0,0D0,KIND=8)
     &        -X2-X3)))

      EPS_M = EPS_M + X3*(SIGMA_SR/ES-CMPLX(2D0,0D0,KIND=8)*TAU_B1*X3/
     &        (ES*DM)+DM/(CMPLX(4D0,0D0,KIND=8)*TAU_B1*X3*
     &        (CMPLX(1D0,0D0,KIND=8)+ALPHA)*KC**ALPHA)*(SIGMA_SR**
     &        (ALPHA+CMPLX(1D0,0D0,KIND=8))-(SIGMA_SR-
     &        CMPLX(4D0,0D0,KIND=8)*TAU_B1*X3/DM)**
     &        (CMPLX(1D0,0D0,KIND=8)+ALPHA)))

      EPS_M = CMPLX(2D0,0D0,KIND=8)/SRM*EPS_M

      ELSEIF ((REAL(SIGMA_SR-CMPLX(2D0,0D0,KIND=8)*TAU_B0*SRM/DM) .GT.
     &REAL(SIG_ID)) .AND. (REAL(SIGMA_SR) .LE. REAL(FSY))) THEN

      EPS_M = SIGMA_SR/ES-TAU_B0*SRM/(ES*DM)+DM/(CMPLX(2D0,0D0,KIND=8)*
     &        TAU_B0*SRM*(CMPLX(1D0,0D0,KIND=8)+ALPHA)*KC**ALPHA)*
     &        (SIGMA_SR**(ALPHA+CMPLX(1D0,0D0,KIND=8))-(SIGMA_SR-
     &        CMPLX(2D0,0D0,KIND=8)*TAU_B0*SRM/DM)**
     &        (CMPLX(1D0,0D0,KIND=8)+ALPHA))

      ELSEIF ((REAL(SIGMA_SR) .GT. REAL(FSY)) .AND. (REAL(SIGMA_SR)
     & .LE. REAL(FSY+CMPLX(2D0,0D0,KIND=8)*TAU_B1*SRM/DM))) THEN

      EPS_M = DM/(CMPLX(4D0,0D0,KIND=8)*ES*TAU_B1*SRM)*((SIGMA_SR-FSY)
     &        **CMPLX(2D0,0D0,KIND=8)*(CMPLX(1D0,0D0,KIND=8)-TAU_B0/
     &        TAU_B1)+CMPLX(2D0,0D0,KIND=8)*ES/((ALPHA+
     &        CMPLX(1D0,0D0,KIND=8))*KC**ALPHA)*(SIGMA_SR**(ALPHA+
     &        CMPLX(1D0,0D0,KIND=8))-FSY**(ALPHA+CMPLX(1D0,0D0,KIND=8))
     &        *(CMPLX(1D0,0D0,KIND=8)-TAU_B1/TAU_B0)-TAU_B1/TAU_B0*
     &        (FSY+TAU_B0/TAU_B1*(SIGMA_SR-FSY)-CMPLX(2D0,0D0,KIND=8)*
     &        TAU_B0*SRM/DM)**(CMPLX(1D0,0D0,KIND=8)+ALPHA)))+TAU_B0/
     &        TAU_B1*(SIGMA_SR/ES-FSY/ES*(CMPLX(1D0,0D0,KIND=8)-TAU_B1/
     &        TAU_B0))-TAU_B0*SRM/(ES*DM)

      ELSEIF (REAL(SIGMA_SR) .GT. REAL(FSY+CMPLX(2D0,0D0,KIND=8)*
     &        TAU_B1*SRM/DM)) THEN

      EPS_M = SIGMA_SR/ES-TAU_B1*SRM/(ES*DM)+DM/(CMPLX(2D0,0D0,KIND=8)*
     &        TAU_B1*SRM*(CMPLX(1D0,0D0,KIND=8)+ALPHA)*KC**ALPHA)*
     &        (SIGMA_SR**(ALPHA+CMPLX(1D0,0D0,KIND=8))-(SIGMA_SR-
     &        CMPLX(2D0,0D0,KIND=8)*TAU_B1*SRM/DM)**
     &        (CMPLX(1D0,0D0,KIND=8)+ALPHA))

      END IF

      F_S_E_KV_ZM = EPS_M

      RETURN

      END FUNCTION F_S_E_KV_ZM