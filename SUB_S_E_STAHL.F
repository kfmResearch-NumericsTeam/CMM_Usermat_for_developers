!-----------------------------------------------------------------------
!     SUBROUTINE ZUR BERECHNUNG DER STAHLSPANNUNG IN FUNKTION DER
!     DEHNUNG Fï¿½R EIN BELIEBIGES WERKSTOFFGESETZ (BILINEAR,
!     KALTVERFORMT, WARMVERFORMT(NATURHART), TRILINEAR....)
!
!     PROGRAMMIERUNG:     DR. KAREL THOMA, HOCHSCHULE LUZERN
!                         PATRICK ROOS, HOCHSCHULE LUZERN
!     DATUM:              22.04.2014
!-----------------------------------------------------------------------
      SUBROUTINE SUB_S_E_STAHL(STAHL,EPS,FSY,FSU,ESU,ESV,ES,KA,KB,KC,
     &                         SIGMA_S)

      IMPLICIT NONE

      ! VARIABLENDEKLARATION
      INTEGER, INTENT(IN) :: STAHL
      DOUBLE COMPLEX, INTENT(IN) :: EPS,FSY,FSU,ESU,ESV,ES,KA,KB,KC
      DOUBLE COMPLEX, INTENT(OUT):: SIGMA_S

      ! INTERFACES ZU EXTERNEN SUBROUTINEN
      INTERFACE
      SUBROUTINE SUB_S_E_STAHL_BL(EPS,FSY,FSU,ESU,ES,SIGMA_S)
        DOUBLE COMPLEX, INTENT(IN) :: EPS,FSY,FSU,ESU,ES
        DOUBLE COMPLEX, INTENT(OUT) :: SIGMA_S
      END SUBROUTINE SUB_S_E_STAHL_BL

      SUBROUTINE SUB_S_E_STAHL_KV(EPS,FSY,FSU,ESU,ESV,ES,KA,KB,KC,
     &                            SIGMA_S)
        DOUBLE COMPLEX, INTENT(IN) :: EPS,FSY,FSU,ESU,ESV,ES,KA,KB,KC
        DOUBLE COMPLEX, INTENT(OUT) :: SIGMA_S
      END SUBROUTINE SUB_S_E_STAHL_KV

      SUBROUTINE SUB_S_E_STAHL_WV(EPS,FSY,FSU,ESU,ESV,ES,KA,KB,KC,
     &                            SIGMA_S)
        DOUBLE COMPLEX, INTENT(IN) :: EPS,FSY,FSU,ESU,ESV,ES,KA,KB,KC
        DOUBLE COMPLEX, INTENT(OUT) :: SIGMA_S
      END SUBROUTINE SUB_S_E_STAHL_WV
      END INTERFACE

      ! UNTERSCHEIDUNG WERKSTOFFGESETZE
      IF (ABS(STAHL-1.0D0) .LT. 0.1D0) THEN

        CALL SUB_S_E_STAHL_BL(EPS,FSY,FSU,ESU,ES,SIGMA_S)

      ELSEIF (ABS(STAHL-1.0D0) .LT. 1.1D0) THEN

        CALL SUB_S_E_STAHL_KV(EPS,FSY,FSU,ESU,ESV,ES,KA,KB,KC,SIGMA_S)

      ELSEIF (ABS(STAHL-1.0D0) .LT. 2.1D0) THEN

        CALL SUB_S_E_STAHL_WV(EPS,FSY,FSU,ESU,ESV,ES,KA,KB,KC,SIGMA_S)

      END IF

      ! KANN BELIEBIG ERWEITERT WERDEN, Z.B.:

      ! ELSEIF (ABS(STAHL-1.0D0) .LT. 3.1D0) THEN

      ! CALL SUB_S_E_STAHL_TL(EPS,FSY,FSU,ESU,ESV,ES,SIGMA_S)

      ! END IF

      END SUBROUTINE SUB_S_E_STAHL