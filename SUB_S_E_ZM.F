!-----------------------------------------------------------------------
!     SUBROUTINE ZUR BERECHNUNG DER MAXIMALEN STAHLSPANNUNG AM RISS IN
!     FUNKTION DER MITTLEREN DEHNUNG MITHILFE DES ZUGGURTMODELLS Fï¿½R
!     EIN BELIEBIGES WERKSTOFFGESETZ (BILINEAR, KALTVERFORMT,
!     WARMVERFORMT(NATURHART), TRILINEAR....)
!
!     PROGRAMMIERUNG:     DR. KAREL THOMA, HOCHSCHULE LUZERN
!                         PATRICK ROOS, HOCHSCHULE LUZERN
!     DATUM:              22.04.2014
!-----------------------------------------------------------------------
      SUBROUTINE SUB_S_E_ZM(ZM,ESM,SRM,DM,FSY,FSU,ESU,ESV,ES,TAU_B0,
     &                      TAU_B1,EC,RHO,KA,KB,KC,SIGMA_SR)

      IMPLICIT NONE

      ! VARIABLENDEKLARATION
      INTEGER, INTENT(IN) :: ZM
      DOUBLE COMPLEX, INTENT(IN) :: ESM,SRM,DM,FSY,FSU,ESU,ESV,ES,
     &                              TAU_B0,TAU_B1,EC,RHO,KA,KB,KC
      DOUBLE COMPLEX, INTENT(OUT):: SIGMA_SR

      ! INTERFACES ZU EXTERNEN SUBROUTINEN
      INTERFACE
      SUBROUTINE SUB_S_E_ZM_BL(ESM,SRM,DM,FSY,FSU,ESU,ES,TAU_B0,TAU_B1,
     &                         EC,RHO,SIGMA_SR)
        DOUBLE COMPLEX, INTENT(IN) :: ESM,SRM,DM,FSY,FSU,ESU,ES,TAU_B0,
     &                                TAU_B1,EC,RHO
        DOUBLE COMPLEX, INTENT(OUT) :: SIGMA_SR
      END SUBROUTINE SUB_S_E_ZM_BL

      SUBROUTINE SUB_S_E_ZM_BL_SEELHOFER(ESM,SRM,DM,FSY,FSU,ESU,ES,
     &                                   TAU_B0,TAU_B1,EC,RHO,SIGMA_SR)
        DOUBLE COMPLEX, INTENT(IN) :: ESM,SRM,DM,FSY,FSU,ESU,ES,TAU_B0,
     &                                TAU_B1,EC,RHO
        DOUBLE COMPLEX, INTENT(OUT) :: SIGMA_SR
      END SUBROUTINE SUB_S_E_ZM_BL_SEELHOFER

      SUBROUTINE SUB_S_E_ZM_KV(ESM,SRM,DM,FSY,FSU,ESU,ESV,ES,TAU_B0,
     &                         TAU_B1,EC,RHO,KA,KB,KC,SIGMA_SR)
        DOUBLE COMPLEX, INTENT(IN) :: ESM,SRM,DM,FSY,FSU,ESU,ESV,ES,
     &                                TAU_B0,TAU_B1,EC,RHO,KA,KB,KC
        DOUBLE COMPLEX, INTENT(OUT) :: SIGMA_SR
      END SUBROUTINE SUB_S_E_ZM_KV

      SUBROUTINE SUB_S_E_ZM_WV(ESM,SRM,DM,FSY,FSU,ESU,ESV,ES,TAU_B0,
     &                         TAU_B1,EC,RHO,KA,KB,KC,SIGMA_SR)
        DOUBLE COMPLEX, INTENT(IN) :: ESM,SRM,DM,FSY,FSU,ESU,ESV,ES,
     &                                TAU_B0,TAU_B1,EC,RHO,KA,KB,KC
        DOUBLE COMPLEX, INTENT(OUT) :: SIGMA_SR
      END SUBROUTINE SUB_S_E_ZM_WV

      END INTERFACE

      ! UNTERSCHEIDUNG WERKSTOFFGESETZE

      IF (ABS(ZM-1.0D0) .LT. 0.1D0) THEN

        CALL SUB_S_E_ZM_BL(ESM,SRM,DM,FSY,FSU,ESU,ES,TAU_B0,TAU_B1,EC,
     &                     RHO,SIGMA_SR)

      ELSEIF (ABS(ZM-1.0D0) .LT. 1.1D0) THEN

        CALL SUB_S_E_ZM_BL_SEELHOFER(ESM,SRM,DM,FSY,FSU,ESU,ES,TAU_B0,
     &                               TAU_B1,EC,RHO,SIGMA_SR)

      ELSEIF (ABS(ZM-1.0D0) .LT. 2.1D0) THEN

        CALL SUB_S_E_ZM_KV(ESM,SRM,DM,FSY,FSU,ESU,ESV,ES,TAU_B0,TAU_B1,
     &                     EC,RHO,KA,KB,KC,SIGMA_SR)

      ELSEIF (ABS(ZM-1.0D0) .LT. 3.1D0) THEN

        CALL SUB_S_E_ZM_WV(ESM,SRM,DM,FSY,FSU,ESU,ESV,ES,TAU_B0,TAU_B1,
     &                     EC,RHO,KA,KB,KC,SIGMA_SR)

      END IF

      ! KANN BELIEBIG ERWEITERT WERDEN, Z.B.:

      ! ELSEIF (ABS(ZM-1.0D0) .LT. 4.1D0) THEN

      ! CALL SUB_S_E_ZM_TL(ESM,SRM,DM,FSY,FSU,ESU,ESV,ES,TAU_B0,TAU_B1,EC,RHO,KA,KB,KC,SIGMA_SR)

      ! END IF

      END SUBROUTINE SUB_S_E_ZM